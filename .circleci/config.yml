# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
jobs:
  build:
    docker:
      - image: circleci/ruby:2.7.0
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: password

    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - bundle-dependencies-v1-{{ checksum "Gemfile.lock" }}
            - bundle-dependencies-v1-

      - run:
          name: Install Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      - run:
          name: Install Dependencies
          command: bundle check || bundle install --without production --without staging --path vendor/bundle

      - save_cache:
          key: bundle-dependencies-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - ./vendor/bundle
  rubocop:
    docker:
      - image: circleci/ruby:2.7.0
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: password

    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - bundle-dependencies-v1-{{ checksum "Gemfile.lock" }}
            - bundle-dependencies-v1-

      - run:
          name: Install Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      - run:
          name: Install Dependencies
          command: bundle check || bundle install --without production --without staging --path vendor/bundle

      - save_cache:
          key: bundle-dependencies-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - ./vendor/bundle
      - run:
         name: Execute rubocop script
         command: |
           echo 'Running Rubocop'
           sleep 14
  test1:
    docker:
      - image: circleci/ruby:2.7.0
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: password

    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - bundle-dependencies-v1-{{ checksum "Gemfile.lock" }}
            - bundle-dependencies-v1-

      - run:
          name: Install Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      - run:
          name: Install Dependencies
          command: bundle check || bundle install --without production --without staging --path vendor/bundle

      - run:
         name: Create and migrate database
         command: |
           echo "RUBYOPT='-W:no-deprecated'" >> $BASH_ENV
           source $BASH_ENV
           sleep 30
           bundle exec rake db:create db:migrate
         environment:
           RAILS_ENV: test
           RACK_ENV: test
  test2:
    docker:
      - image: circleci/ruby:2.7.0
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: password

    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - bundle-dependencies-v1-{{ checksum "Gemfile.lock" }}
            - bundle-dependencies-v1-

      - run:
          name: Install Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      - run:
          name: Install Dependencies
          command: bundle check || bundle install --without production --without staging --path vendor/bundle

      - run:
         name: Create and migrate database
         command: |
           echo "RUBYOPT='-W:no-deprecated'" >> $BASH_ENV
           source $BASH_ENV
           sleep 30
           bundle exec rake db:create db:migrate
         environment:
           RAILS_ENV: test
           RACK_ENV: test

  test3:
    docker:
      - image: circleci/ruby:2.7.0
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: password

    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - bundle-dependencies-v1-{{ checksum "Gemfile.lock" }}
            - bundle-dependencies-v1-

      - run:
          name: Install Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      - run:
          name: Install Dependencies
          command: bundle check || bundle install --without production --without staging --path vendor/bundle

      - run:
         name: Create and migrate database
         command: |
           echo "RUBYOPT='-W:no-deprecated'" >> $BASH_ENV
           source $BASH_ENV
           sleep 30
           bundle exec rake db:create db:migrate
         environment:
           RAILS_ENV: test
           RACK_ENV: test
  test4:
    docker:
      - image: circleci/ruby:2.7.0
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: password

    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - bundle-dependencies-v1-{{ checksum "Gemfile.lock" }}
            - bundle-dependencies-v1-

      - run:
          name: Install Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      - run:
          name: Install Dependencies
          command: bundle check || bundle install --without production --without staging --path vendor/bundle

      - run:
         name: Create and migrate database
         command: |
           echo "RUBYOPT='-W:no-deprecated'" >> $BASH_ENV
           source $BASH_ENV
           sleep 30
           bundle exec rake db:create db:migrate
         environment:
           RAILS_ENV: test
           RACK_ENV: test
  test5:
    docker:
      - image: circleci/ruby:2.7.0
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: password

    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - bundle-dependencies-v1-{{ checksum "Gemfile.lock" }}
            - bundle-dependencies-v1-

      - run:
          name: Install Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      - run:
          name: Install Dependencies
          command: bundle check || bundle install --without production --without staging --path vendor/bundle

      - run:
         name: Create and migrate database
         command: |
           echo "RUBYOPT='-W:no-deprecated'" >> $BASH_ENV
           source $BASH_ENV
           sleep 30
           bundle exec rake db:create db:migrate
         environment:
           RAILS_ENV: test
           RACK_ENV: test
  test6:
    docker:
      - image: circleci/ruby:2.7.0
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: password

    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - bundle-dependencies-v1-{{ checksum "Gemfile.lock" }}
            - bundle-dependencies-v1-

      - run:
          name: Install Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      - run:
          name: Install Dependencies
          command: bundle check || bundle install --without production --without staging --path vendor/bundle

      - run:
         name: Create and migrate database
         command: |
           echo "RUBYOPT='-W:no-deprecated'" >> $BASH_ENV
           source $BASH_ENV
           sleep 30
           bundle exec rake db:create db:migrate
         environment:
           RAILS_ENV: test
           RACK_ENV: test
  test7:
    docker:
      - image: circleci/ruby:2.7.0
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: password

    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - bundle-dependencies-v1-{{ checksum "Gemfile.lock" }}
            - bundle-dependencies-v1-

      - run:
          name: Install Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      - run:
          name: Install Dependencies
          command: bundle check || bundle install --without production --without staging --path vendor/bundle

      - run:
         name: Create and migrate database
         command: |
           echo "RUBYOPT='-W:no-deprecated'" >> $BASH_ENV
           source $BASH_ENV
           sleep 30
           bundle exec rake db:create db:migrate
         environment:
           RAILS_ENV: test
           RACK_ENV: test
workflows:
  build_and_deploy:
    jobs:
      - build
      - rubocop:
          requires:
            - build
      - test1:
          requires:
            - rubocop
      - test2:
          requires:
            - rubocop
      - test3:
          requires:
            - rubocop
      - test4:
          requires:
            - rubocop
      - test5:
          requires:
            - rubocop
      - test6:
          requires:
            - rubocop
      - test7:
          requires:
            - rubocop
